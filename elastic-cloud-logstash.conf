input {
  tcp {
    type => "netcool"
    codec => "plain"
    port => 1235
  } # end tcp
} # end input

filter {
  mutate {
    # The message begins with either UPDATE or INSERT depending on whether it 
    # is a new event or an update.  In order for the CSV parser to succeed this 
    # initial verb needs to be removed.
    gsub => ["message", "^\w*", ""]
  }

  csv {
    # This filter splits the message field into the indicated fields (columns).  The 
    # name and order of the fields comes from the socket gateway mapping file.
      skip_empty_columns => true
      separator => ";"
      columns => ["Node", "NodeAlias", "AlertGroup", "AlertKey", "Severity", "Summary", "StateChange", "FirstOccurrence", "Timestamp", "Type", "Location", "Customer", "Service", "OriginalSeverity", "ServerName" ] 
  } #end csv

} # end filters

output {
  #stdout { codec => rubydebug } # end stdout 

  elasticsearch {
    hosts => "https://9283474638726942169494910973.us-east-1.aws.found.io:9243/"
    user => "logstash_agent"
    password => "s0up3rs3cr3t"
    index => "logstash-netcool"
  }
} # end output
